Inspecting 76 files
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

Offenses:

Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
source 'https://rubygems.org'
^
Rakefile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Add your own tasks in files placed in lib/tasks ending in .rake,
^
app/channels/application_cable/channel.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/channels/application_cable/connection.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/controllers/admin/questions_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class Admin::QuestionsController.
class Admin::QuestionsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/questions_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Admin::QuestionsController < ApplicationController
^
app/controllers/admin/questions_controller.rb:1:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class Admin::QuestionsController < ApplicationController
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/sessions_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class Admin::SessionsController.
class Admin::SessionsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/sessions_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Admin::SessionsController < ApplicationController
^
app/controllers/admin/sessions_controller.rb:1:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class Admin::SessionsController < ApplicationController
      ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/sessions_controller.rb:4:3: C: Metrics/AbcSize: Assignment Branch Condition size for create is too high. [<4, 25, 5> 25.81/17]
  def create ...
  ^^^^^^^^^^
app/controllers/admin/sessions_controller.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def create ...
  ^^^^^^^^^^
app/controllers/admin/users_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class Admin::UsersController.
class Admin::UsersController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/users_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Admin::UsersController < ApplicationController
^
app/controllers/admin/users_controller.rb:1:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class Admin::UsersController < ApplicationController
      ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/answers_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AnswersController.
class AnswersController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/answers_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AnswersController < ApplicationController
^
app/controllers/answers_controller.rb:5:3: C: Metrics/AbcSize: Assignment Branch Condition size for create is too high. [<3, 17, 2> 17.38/17]
  def create ...
  ^^^^^^^^^^
app/controllers/answers_controller.rb:10:7: C: [Correctable] Style/IdenticalConditionalBranches: Move redirect_to question_path(@answer.question_id) out of the conditional.
      redirect_to question_path(@answer.question_id)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/answers_controller.rb:13:7: C: [Correctable] Style/IdenticalConditionalBranches: Move redirect_to question_path(@answer.question_id) out of the conditional.
      redirect_to question_path(@answer.question_id)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/answers_controller.rb:32:5: C: Style/GuardClause: Use a guard clause (return unless answer.nil?) instead of wrapping the code inside a conditional expression.
    if answer.nil?
    ^^
app/controllers/application_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationController.
class ApplicationController < ActionController::Base
^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationController < ActionController::Base
^
app/controllers/application_controller.rb:7:5: C: Style/GuardClause: Use a guard clause (return if logged_in?) instead of wrapping the code inside a conditional expression.
    unless logged_in?
    ^^^^^^
app/controllers/application_controller.rb:15:5: C: Style/GuardClause: Use a guard clause (return if current_user.admin?) instead of wrapping the code inside a conditional expression.
    unless current_user.admin?
    ^^^^^^
app/controllers/questions_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class QuestionsController.
class QuestionsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/questions_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class QuestionsController < ApplicationController
^
app/controllers/questions_controller.rb:73:5: C: Style/GuardClause: Use a guard clause (return unless @question.nil?) instead of wrapping the code inside a conditional expression.
    if @question.nil?
    ^^
app/controllers/sessions_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class SessionsController.
class SessionsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sessions_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class SessionsController < ApplicationController
^
app/controllers/sessions_controller.rb:4:3: C: Metrics/AbcSize: Assignment Branch Condition size for create is too high. [<3, 18, 3> 18.49/17]
  def create ...
  ^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class UsersController.
class UsersController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UsersController < ApplicationController
^
app/controllers/users_controller.rb:54:5: C: Style/GuardClause: Use a guard clause (return if current_user?(@user)) instead of wrapping the code inside a conditional expression.
    unless current_user?(@user)
    ^^^^^^
app/helpers/admin/questions_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module Admin::QuestionsHelper.
module Admin::QuestionsHelper
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/admin/questions_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module Admin::QuestionsHelper
^
app/helpers/admin/questions_helper.rb:1:8: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
module Admin::QuestionsHelper
       ^^^^^^^^^^^^^^^^^^^^^^
app/helpers/admin/sessions_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module Admin::SessionsHelper.
module Admin::SessionsHelper
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/admin/sessions_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module Admin::SessionsHelper
^
app/helpers/admin/sessions_helper.rb:1:8: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
module Admin::SessionsHelper
       ^^^^^^^^^^^^^^^^^^^^^
app/helpers/admin/users_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module Admin::UsersHelper.
module Admin::UsersHelper
^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/admin/users_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module Admin::UsersHelper
^
app/helpers/admin/users_helper.rb:1:8: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
module Admin::UsersHelper
       ^^^^^^^^^^^^^^^^^^
app/helpers/answers_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module AnswersHelper.
module AnswersHelper
^^^^^^^^^^^^^^^^^^^^
app/helpers/answers_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module AnswersHelper
^
app/helpers/application_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module ApplicationHelper.
module ApplicationHelper
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationHelper
^
app/helpers/questions_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module QuestionsHelper.
module QuestionsHelper
^^^^^^^^^^^^^^^^^^^^^^
app/helpers/questions_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module QuestionsHelper
^
app/helpers/sessions_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module SessionsHelper.
module SessionsHelper
^^^^^^^^^^^^^^^^^^^^^
app/helpers/sessions_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module SessionsHelper
^
app/helpers/users_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module UsersHelper.
module UsersHelper
^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module UsersHelper
^
app/jobs/application_job.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationJob < ActiveJob::Base
^
app/mailers/application_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationMailer < ActionMailer::Base
^
app/mailers/qa_mailer.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class QaMailer.
class QaMailer < ApplicationMailer
^^^^^^^^^^^^^^
app/mailers/qa_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class QaMailer < ApplicationMailer
^
app/models/answer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Answer < ApplicationRecord
^
app/models/application_record.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationRecord.
class ApplicationRecord < ActiveRecord::Base
^^^^^^^^^^^^^^^^^^^^^^^
app/models/application_record.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationRecord < ActiveRecord::Base
^
app/models/question.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Question < ApplicationRecord
^
app/models/user.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class User.
class User < ApplicationRecord
^^^^^^^^^^
app/models/user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class User < ApplicationRecord
^
bin/bundle:17:22: C: [Correctable] Style/SpecialGlobalVars: Prefer $PROGRAM_NAME over $0.
    File.expand_path($0) == File.expand_path(__FILE__)
                     ^^
bin/bundle:24:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for cli_arg_version is too high. [9/7]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/MethodLength: Method has too many lines. [11/10]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/PerceivedComplexity: Perceived complexity for cli_arg_version is too high. [9/8]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:91:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def activate_bundler ...
  ^^^^^^^^^^^^^^^^^^^^
bin/bundle:104:121: C: Layout/LineLength: Line is too long. [198/120]
    warn "Activating bundler (#{bundler_requirement}) failed:\n#{gem_error.message}\n\nTo install the version of bundler this project requires, run `gem install bundler -v '#{bundler_requirement}'`"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/rails:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/rake:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/setup:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/spring:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/webpack:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/webpack-dev-server:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/yarn:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/yarn:4:10: C: [Correctable] Style/InverseMethods: Use reject instead of inverting select.
  yarn = ENV['PATH'].split(File::PATH_SEPARATOR) ...
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config.ru:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is used by Rack-based servers to start the application.
^
config/application.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require_relative 'boot'
^
config/application.rb:10:3: C: Style/Documentation: Missing top-level documentation comment for class QASampleApp::Application.
  class Application < Rails::Application
  ^^^^^^^^^^^^^^^^^
config/boot.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)
^
config/environment.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Load the Rails application.
^
config/environments/development.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'active_support/core_ext/integer/time'
^
config/environments/development.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [27/25]
Rails.application.configure do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'active_support/core_ext/integer/time'
^
config/environments/production.rb:92:50: C: [Correctable] Style/GlobalStdStream: Use $stdout instead of STDOUT.
    logger           = ActiveSupport::Logger.new(STDOUT)
                                                 ^^^^^^
config/environments/test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'active_support/core_ext/integer/time'
^
config/initializers/application_controller_renderer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/assets.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/backtrace_silencers.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/content_security_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/cookies_serializer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/filter_parameter_logging.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/inflections.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/mime_types.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/permissions_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Define an application-wide HTTP permissions policy. For further
^
config/initializers/wrap_parameters.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/puma.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Puma can serve each request in a thread from an internal thread pool.
^
config/puma.rb:7:25: C: [Correctable] Style/RedundantFetchBlock: Use fetch('RAILS_MAX_THREADS', 5) instead of fetch('RAILS_MAX_THREADS') { 5 }.
max_threads_count = ENV.fetch('RAILS_MAX_THREADS') { 5 }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:18:10: C: [Correctable] Style/RedundantFetchBlock: Use fetch('PORT', 3000) instead of fetch('PORT') { 3000 }.
port ENV.fetch('PORT') { 3000 }
         ^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Rails.application.routes.draw do
^
config/spring.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Spring.watch(
^
db/migrate/20220427143254_create_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateUsers.
class CreateUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^
db/migrate/20220427143254_create_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateUsers < ActiveRecord::Migration[6.1]
^
db/migrate/20220427143550_create_active_storage_tables.active_storage.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This migration comes from active_storage (originally 20170806125915)
^
db/migrate/20220427143550_create_active_storage_tables.active_storage.rb:3:3: C: Metrics/AbcSize: Assignment Branch Condition size for change is too high. [<3, 22, 0> 22.2/17]
  def change ...
  ^^^^^^^^^^
db/migrate/20220427143550_create_active_storage_tables.active_storage.rb:3:3: C: Metrics/MethodLength: Method has too many lines. [26/10]
  def change ...
  ^^^^^^^^^^
db/migrate/20220429085641_add_password_digest_to_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddPasswordDigestToUsers.
class AddPasswordDigestToUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220429085641_add_password_digest_to_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddPasswordDigestToUsers < ActiveRecord::Migration[6.1]
^
db/migrate/20220430095831_create_questions.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateQuestions.
class CreateQuestions < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220430095831_create_questions.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateQuestions < ActiveRecord::Migration[6.1]
^
db/migrate/20220501084130_create_answers.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateAnswers.
class CreateAnswers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^
db/migrate/20220501084130_create_answers.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateAnswers < ActiveRecord::Migration[6.1]
^
db/migrate/20220504030747_add_admin_to_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddAdminToUsers.
class AddAdminToUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220504030747_add_admin_to_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddAdminToUsers < ActiveRecord::Migration[6.1]
^
db/schema.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is auto-generated from the current state of the database. Instead
^
db/schema.rb:13:1: C: Metrics/BlockLength: Block has too many lines. [58/25]
ActiveRecord::Schema.define(version: 20_220_504_030_747) do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file should contain all the record creation needed to seed the database with its default values.
^
spec/factories/answers.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
FactoryBot.define do
^
spec/factories/questions.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
FactoryBot.define do
^
spec/factories/users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
FactoryBot.define do
^
spec/rails_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is copied to spec/ when you run 'rails generate rspec:install'
^
spec/spec_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file was generated by the `rails generate rspec:install` command. Conventionally, all
^
spec/support/capybara.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
RSpec.configure do |config|
^
spec/system/question_answer_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/system/question_answer_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [128/25]
RSpec.describe '質問から回答までの一連の流れ', type: :system do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/system/question_answer_spec.rb:4:3: C: Metrics/BlockLength: Block has too many lines. [46/25]
  describe '基本的な操作' do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/system/question_answer_spec.rb:6:5: C: Metrics/BlockLength: Block has too many lines. [43/25]
    it '質問から回答までの一連の流れが正しく行われること' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/system/question_answer_spec.rb:107:3: C: Metrics/BlockLength: Block has too many lines. [36/25]
  describe '質問, 回答時のメール通知' do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/system/signup_signin_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
test/application_system_test_case.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/channels/application_cable/connection_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/channels/application_cable/connection_test.rb:3:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class ApplicationCable::ConnectionTest < ActionCable::Connection::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/models/user_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/test_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV['RAILS_ENV'] ||= 'test'
^
test/test_helper.rb:5:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class ActiveSupport::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^

76 files inspected, 137 offenses detected, 90 more offenses can be corrected with `rubocop -A`
Inspecting 76 files
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

Offenses:

Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
source 'https://rubygems.org'
^
Rakefile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Add your own tasks in files placed in lib/tasks ending in .rake,
^
app/channels/application_cable/channel.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/channels/application_cable/connection.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/controllers/admin/questions_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class Admin::QuestionsController.
class Admin::QuestionsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/questions_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Admin::QuestionsController < ApplicationController
^
app/controllers/admin/questions_controller.rb:1:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class Admin::QuestionsController < ApplicationController
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/sessions_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class Admin::SessionsController.
class Admin::SessionsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/sessions_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Admin::SessionsController < ApplicationController
^
app/controllers/admin/sessions_controller.rb:1:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class Admin::SessionsController < ApplicationController
      ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/sessions_controller.rb:4:3: C: Metrics/AbcSize: Assignment Branch Condition size for create is too high. [<4, 25, 5> 25.81/17]
  def create ...
  ^^^^^^^^^^
app/controllers/admin/sessions_controller.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def create ...
  ^^^^^^^^^^
app/controllers/admin/users_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class Admin::UsersController.
class Admin::UsersController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/users_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Admin::UsersController < ApplicationController
^
app/controllers/admin/users_controller.rb:1:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class Admin::UsersController < ApplicationController
      ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/answers_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AnswersController.
class AnswersController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/answers_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AnswersController < ApplicationController
^
app/controllers/answers_controller.rb:5:3: C: Metrics/AbcSize: Assignment Branch Condition size for create is too high. [<3, 17, 2> 17.38/17]
  def create ...
  ^^^^^^^^^^
app/controllers/answers_controller.rb:10:7: C: [Correctable] Style/IdenticalConditionalBranches: Move redirect_to question_path(@answer.question_id) out of the conditional.
      redirect_to question_path(@answer.question_id)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/answers_controller.rb:13:7: C: [Correctable] Style/IdenticalConditionalBranches: Move redirect_to question_path(@answer.question_id) out of the conditional.
      redirect_to question_path(@answer.question_id)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/answers_controller.rb:32:5: C: Style/GuardClause: Use a guard clause (return unless answer.nil?) instead of wrapping the code inside a conditional expression.
    if answer.nil?
    ^^
app/controllers/application_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationController.
class ApplicationController < ActionController::Base
^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationController < ActionController::Base
^
app/controllers/application_controller.rb:7:5: C: Style/GuardClause: Use a guard clause (return if logged_in?) instead of wrapping the code inside a conditional expression.
    unless logged_in?
    ^^^^^^
app/controllers/application_controller.rb:15:5: C: Style/GuardClause: Use a guard clause (return if current_user.admin?) instead of wrapping the code inside a conditional expression.
    unless current_user.admin?
    ^^^^^^
app/controllers/questions_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class QuestionsController.
class QuestionsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/questions_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class QuestionsController < ApplicationController
^
app/controllers/questions_controller.rb:73:5: C: Style/GuardClause: Use a guard clause (return unless @question.nil?) instead of wrapping the code inside a conditional expression.
    if @question.nil?
    ^^
app/controllers/sessions_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class SessionsController.
class SessionsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sessions_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class SessionsController < ApplicationController
^
app/controllers/sessions_controller.rb:4:3: C: Metrics/AbcSize: Assignment Branch Condition size for create is too high. [<3, 18, 3> 18.49/17]
  def create ...
  ^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class UsersController.
class UsersController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UsersController < ApplicationController
^
app/controllers/users_controller.rb:54:5: C: Style/GuardClause: Use a guard clause (return if current_user?(@user)) instead of wrapping the code inside a conditional expression.
    unless current_user?(@user)
    ^^^^^^
app/helpers/admin/questions_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module Admin::QuestionsHelper.
module Admin::QuestionsHelper
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/admin/questions_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module Admin::QuestionsHelper
^
app/helpers/admin/questions_helper.rb:1:8: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
module Admin::QuestionsHelper
       ^^^^^^^^^^^^^^^^^^^^^^
app/helpers/admin/sessions_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module Admin::SessionsHelper.
module Admin::SessionsHelper
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/admin/sessions_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module Admin::SessionsHelper
^
app/helpers/admin/sessions_helper.rb:1:8: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
module Admin::SessionsHelper
       ^^^^^^^^^^^^^^^^^^^^^
app/helpers/admin/users_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module Admin::UsersHelper.
module Admin::UsersHelper
^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/admin/users_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module Admin::UsersHelper
^
app/helpers/admin/users_helper.rb:1:8: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
module Admin::UsersHelper
       ^^^^^^^^^^^^^^^^^^
app/helpers/answers_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module AnswersHelper.
module AnswersHelper
^^^^^^^^^^^^^^^^^^^^
app/helpers/answers_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module AnswersHelper
^
app/helpers/application_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module ApplicationHelper.
module ApplicationHelper
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationHelper
^
app/helpers/questions_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module QuestionsHelper.
module QuestionsHelper
^^^^^^^^^^^^^^^^^^^^^^
app/helpers/questions_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module QuestionsHelper
^
app/helpers/sessions_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module SessionsHelper.
module SessionsHelper
^^^^^^^^^^^^^^^^^^^^^
app/helpers/sessions_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module SessionsHelper
^
app/helpers/users_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module UsersHelper.
module UsersHelper
^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module UsersHelper
^
app/jobs/application_job.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationJob < ActiveJob::Base
^
app/mailers/application_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationMailer < ActionMailer::Base
^
app/mailers/qa_mailer.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class QaMailer.
class QaMailer < ApplicationMailer
^^^^^^^^^^^^^^
app/mailers/qa_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class QaMailer < ApplicationMailer
^
app/models/answer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Answer < ApplicationRecord
^
app/models/application_record.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationRecord.
class ApplicationRecord < ActiveRecord::Base
^^^^^^^^^^^^^^^^^^^^^^^
app/models/application_record.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationRecord < ActiveRecord::Base
^
app/models/question.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Question < ApplicationRecord
^
app/models/user.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class User.
class User < ApplicationRecord
^^^^^^^^^^
app/models/user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class User < ApplicationRecord
^
bin/bundle:17:22: C: [Correctable] Style/SpecialGlobalVars: Prefer $PROGRAM_NAME over $0.
    File.expand_path($0) == File.expand_path(__FILE__)
                     ^^
bin/bundle:24:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for cli_arg_version is too high. [9/7]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/MethodLength: Method has too many lines. [11/10]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/PerceivedComplexity: Perceived complexity for cli_arg_version is too high. [9/8]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:91:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def activate_bundler ...
  ^^^^^^^^^^^^^^^^^^^^
bin/bundle:104:121: C: Layout/LineLength: Line is too long. [198/120]
    warn "Activating bundler (#{bundler_requirement}) failed:\n#{gem_error.message}\n\nTo install the version of bundler this project requires, run `gem install bundler -v '#{bundler_requirement}'`"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/rails:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/rake:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/setup:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/spring:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/webpack:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/webpack-dev-server:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/yarn:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/yarn:4:10: C: [Correctable] Style/InverseMethods: Use reject instead of inverting select.
  yarn = ENV['PATH'].split(File::PATH_SEPARATOR) ...
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config.ru:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is used by Rack-based servers to start the application.
^
config/application.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require_relative 'boot'
^
config/application.rb:10:3: C: Style/Documentation: Missing top-level documentation comment for class QASampleApp::Application.
  class Application < Rails::Application
  ^^^^^^^^^^^^^^^^^
config/boot.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)
^
config/environment.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Load the Rails application.
^
config/environments/development.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'active_support/core_ext/integer/time'
^
config/environments/development.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [27/25]
Rails.application.configure do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'active_support/core_ext/integer/time'
^
config/environments/production.rb:92:50: C: [Correctable] Style/GlobalStdStream: Use $stdout instead of STDOUT.
    logger           = ActiveSupport::Logger.new(STDOUT)
                                                 ^^^^^^
config/environments/test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'active_support/core_ext/integer/time'
^
config/initializers/application_controller_renderer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/assets.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/backtrace_silencers.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/content_security_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/cookies_serializer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/filter_parameter_logging.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/inflections.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/mime_types.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/permissions_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Define an application-wide HTTP permissions policy. For further
^
config/initializers/wrap_parameters.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/puma.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Puma can serve each request in a thread from an internal thread pool.
^
config/puma.rb:7:25: C: [Correctable] Style/RedundantFetchBlock: Use fetch('RAILS_MAX_THREADS', 5) instead of fetch('RAILS_MAX_THREADS') { 5 }.
max_threads_count = ENV.fetch('RAILS_MAX_THREADS') { 5 }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:18:10: C: [Correctable] Style/RedundantFetchBlock: Use fetch('PORT', 3000) instead of fetch('PORT') { 3000 }.
port ENV.fetch('PORT') { 3000 }
         ^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Rails.application.routes.draw do
^
config/spring.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Spring.watch(
^
db/migrate/20220427143254_create_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateUsers.
class CreateUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^
db/migrate/20220427143254_create_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateUsers < ActiveRecord::Migration[6.1]
^
db/migrate/20220427143550_create_active_storage_tables.active_storage.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This migration comes from active_storage (originally 20170806125915)
^
db/migrate/20220427143550_create_active_storage_tables.active_storage.rb:3:3: C: Metrics/AbcSize: Assignment Branch Condition size for change is too high. [<3, 22, 0> 22.2/17]
  def change ...
  ^^^^^^^^^^
db/migrate/20220427143550_create_active_storage_tables.active_storage.rb:3:3: C: Metrics/MethodLength: Method has too many lines. [26/10]
  def change ...
  ^^^^^^^^^^
db/migrate/20220429085641_add_password_digest_to_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddPasswordDigestToUsers.
class AddPasswordDigestToUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220429085641_add_password_digest_to_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddPasswordDigestToUsers < ActiveRecord::Migration[6.1]
^
db/migrate/20220430095831_create_questions.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateQuestions.
class CreateQuestions < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220430095831_create_questions.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateQuestions < ActiveRecord::Migration[6.1]
^
db/migrate/20220501084130_create_answers.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateAnswers.
class CreateAnswers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^
db/migrate/20220501084130_create_answers.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateAnswers < ActiveRecord::Migration[6.1]
^
db/migrate/20220504030747_add_admin_to_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddAdminToUsers.
class AddAdminToUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220504030747_add_admin_to_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddAdminToUsers < ActiveRecord::Migration[6.1]
^
db/schema.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is auto-generated from the current state of the database. Instead
^
db/schema.rb:13:1: C: Metrics/BlockLength: Block has too many lines. [58/25]
ActiveRecord::Schema.define(version: 20_220_504_030_747) do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file should contain all the record creation needed to seed the database with its default values.
^
spec/factories/answers.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
FactoryBot.define do
^
spec/factories/questions.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
FactoryBot.define do
^
spec/factories/users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
FactoryBot.define do
^
spec/rails_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is copied to spec/ when you run 'rails generate rspec:install'
^
spec/spec_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file was generated by the `rails generate rspec:install` command. Conventionally, all
^
spec/support/capybara.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
RSpec.configure do |config|
^
spec/system/question_answer_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/system/question_answer_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [128/25]
RSpec.describe '質問から回答までの一連の流れ', type: :system do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/system/question_answer_spec.rb:4:3: C: Metrics/BlockLength: Block has too many lines. [46/25]
  describe '基本的な操作' do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/system/question_answer_spec.rb:6:5: C: Metrics/BlockLength: Block has too many lines. [43/25]
    it '質問から回答までの一連の流れが正しく行われること' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/system/question_answer_spec.rb:107:3: C: Metrics/BlockLength: Block has too many lines. [36/25]
  describe '質問, 回答時のメール通知' do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/system/signup_signin_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
test/application_system_test_case.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/channels/application_cable/connection_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/channels/application_cable/connection_test.rb:3:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class ApplicationCable::ConnectionTest < ActionCable::Connection::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/models/user_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/test_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV['RAILS_ENV'] ||= 'test'
^
test/test_helper.rb:5:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class ActiveSupport::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^

76 files inspected, 137 offenses detected, 90 more offenses can be corrected with `rubocop -A`
